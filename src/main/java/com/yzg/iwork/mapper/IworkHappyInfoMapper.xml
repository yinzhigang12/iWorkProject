<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzg.iwork.mapper.IworkHappyInfoMapper">
  <resultMap id="BaseResultMap" type="com.yzg.iwork.pojo.IworkHappyInfo">
    <id column="happyInfoId" jdbcType="INTEGER" property="happyinfoid" />
    <result column="happySortId" jdbcType="INTEGER" property="happysortid" />
    <result column="happyName" jdbcType="VARCHAR" property="happyname" />
    <result column="happyAddr" jdbcType="VARCHAR" property="happyaddr" />
    <result column="happyPicAddr" jdbcType="VARCHAR" property="happypicaddr" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.yzg.iwork.pojo.IworkHappyInfo">
    <result column="happyComment" jdbcType="LONGVARCHAR" property="happycomment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    happyInfoId, happySortId, happyName, happyAddr, happyPicAddr, status
  </sql>
  <sql id="Blob_Column_List">
    happyComment
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.yzg.iwork.pojo.IworkHappyInfoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from iwork_happy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.yzg.iwork.pojo.IworkHappyInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from iwork_happy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from iwork_happy_info
    where happyInfoId = #{happyinfoid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from iwork_happy_info
    where happyInfoId = #{happyinfoid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yzg.iwork.pojo.IworkHappyInfoExample">
    delete from iwork_happy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yzg.iwork.pojo.IworkHappyInfo">
    insert into iwork_happy_info (happyInfoId, happySortId, happyName, 
      happyAddr, happyPicAddr, status, 
      happyComment)
    values (#{happyinfoid,jdbcType=INTEGER}, #{happysortid,jdbcType=INTEGER}, #{happyname,jdbcType=VARCHAR}, 
      #{happyaddr,jdbcType=VARCHAR}, #{happypicaddr,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{happycomment,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yzg.iwork.pojo.IworkHappyInfo">
    insert into iwork_happy_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="happyinfoid != null">
        happyInfoId,
      </if>
      <if test="happysortid != null">
        happySortId,
      </if>
      <if test="happyname != null">
        happyName,
      </if>
      <if test="happyaddr != null">
        happyAddr,
      </if>
      <if test="happypicaddr != null">
        happyPicAddr,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="happycomment != null">
        happyComment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="happyinfoid != null">
        #{happyinfoid,jdbcType=INTEGER},
      </if>
      <if test="happysortid != null">
        #{happysortid,jdbcType=INTEGER},
      </if>
      <if test="happyname != null">
        #{happyname,jdbcType=VARCHAR},
      </if>
      <if test="happyaddr != null">
        #{happyaddr,jdbcType=VARCHAR},
      </if>
      <if test="happypicaddr != null">
        #{happypicaddr,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="happycomment != null">
        #{happycomment,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yzg.iwork.pojo.IworkHappyInfoExample" resultType="java.lang.Long">
    select count(*) from iwork_happy_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update iwork_happy_info
    <set>
      <if test="record.happyinfoid != null">
        happyInfoId = #{record.happyinfoid,jdbcType=INTEGER},
      </if>
      <if test="record.happysortid != null">
        happySortId = #{record.happysortid,jdbcType=INTEGER},
      </if>
      <if test="record.happyname != null">
        happyName = #{record.happyname,jdbcType=VARCHAR},
      </if>
      <if test="record.happyaddr != null">
        happyAddr = #{record.happyaddr,jdbcType=VARCHAR},
      </if>
      <if test="record.happypicaddr != null">
        happyPicAddr = #{record.happypicaddr,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.happycomment != null">
        happyComment = #{record.happycomment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update iwork_happy_info
    set happyInfoId = #{record.happyinfoid,jdbcType=INTEGER},
      happySortId = #{record.happysortid,jdbcType=INTEGER},
      happyName = #{record.happyname,jdbcType=VARCHAR},
      happyAddr = #{record.happyaddr,jdbcType=VARCHAR},
      happyPicAddr = #{record.happypicaddr,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      happyComment = #{record.happycomment,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update iwork_happy_info
    set happyInfoId = #{record.happyinfoid,jdbcType=INTEGER},
      happySortId = #{record.happysortid,jdbcType=INTEGER},
      happyName = #{record.happyname,jdbcType=VARCHAR},
      happyAddr = #{record.happyaddr,jdbcType=VARCHAR},
      happyPicAddr = #{record.happypicaddr,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yzg.iwork.pojo.IworkHappyInfo">
    update iwork_happy_info
    <set>
      <if test="happysortid != null">
        happySortId = #{happysortid,jdbcType=INTEGER},
      </if>
      <if test="happyname != null">
        happyName = #{happyname,jdbcType=VARCHAR},
      </if>
      <if test="happyaddr != null">
        happyAddr = #{happyaddr,jdbcType=VARCHAR},
      </if>
      <if test="happypicaddr != null">
        happyPicAddr = #{happypicaddr,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="happycomment != null">
        happyComment = #{happycomment,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where happyInfoId = #{happyinfoid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yzg.iwork.pojo.IworkHappyInfo">
    update iwork_happy_info
    set happySortId = #{happysortid,jdbcType=INTEGER},
      happyName = #{happyname,jdbcType=VARCHAR},
      happyAddr = #{happyaddr,jdbcType=VARCHAR},
      happyPicAddr = #{happypicaddr,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      happyComment = #{happycomment,jdbcType=LONGVARCHAR}
    where happyInfoId = #{happyinfoid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yzg.iwork.pojo.IworkHappyInfo">
    update iwork_happy_info
    set happySortId = #{happysortid,jdbcType=INTEGER},
      happyName = #{happyname,jdbcType=VARCHAR},
      happyAddr = #{happyaddr,jdbcType=VARCHAR},
      happyPicAddr = #{happypicaddr,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where happyInfoId = #{happyinfoid,jdbcType=INTEGER}
  </update>
</mapper>